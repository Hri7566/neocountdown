---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Neocountdown">

	<main>
		<div id="tsparticles"></div>
		<div class="timer-container" style="margin-top: auto; margin-bottom: auto; width: 100%; height: 100%;">
			<div id="hours" class="code-font timer">00:00:00.000</div>
		</div>
	</main>

	<script>
		import { tsParticles } from "@tsparticles/engine";
		import { loadConfettiPreset } from "@tsparticles/preset-confetti";
		
		(async () => {
			let dateStr = "February 14 2024 00:00:00 GMT-0500 (EST)";
			let then = Number(new Date(dateStr));
			let div = document.getElementById("hours") as HTMLElement;
			let shouldUpdate = true;

			let updateInterval = async function() {
				let now = Date.now();
				let ms = then - now;

				if (ms <= 0) {
					div.innerHTML = "00:00:00.000";
					// clearInterval(updateInterval);
					shouldUpdate = false;
					blink();

					setTimeout(async () => {
						await loadConfettiPreset(tsParticles);

						await tsParticles.load({
							options: {
								preset: "confetti",
								particles: {
									color: {
										value: ["#ff0000", "#ffffff", "#f48ca4"]
									}
								},
								emitters: [{
									startCount: 100,
									life: {
										duration: 0,
										count: 1
									},
									rate: {
										quantity: 10
									},
									position: {
										x: 50,
										y: 0
									}
								}]
							},
							id: "tsparticles"
						});
					}, 3000);
				} else {
					let s = ms / 1000
					let m = s / 60;
					let h = m / 60;
					let d = h / 24;

					let lll = (ms % 1000).toString().padStart(3, "0");
					let ss = Math.floor(s % 60).toString().padStart(2, "0");
					let mm = Math.floor(m % 60).toString().padStart(2, "0");
					let hh = Math.floor(h % 24).toString().padStart(2, "0");
					let dd = Math.floor(d).toString().padStart(2, "0");

					div.innerHTML = `${dd ? `${dd}:` : ""}${hh}:${mm}:${ss}.${lll}`;
					document.title = `${dd}:${hh}:${mm}:${ss}.${lll}`;
				}

				if (shouldUpdate) requestAnimationFrame(async () => {
					await updateInterval();
				});
			}

			if (shouldUpdate) requestAnimationFrame(async () => {
				await updateInterval();
			});

			function blink() {
				div.hidden = !div.hidden;
				setTimeout(() => {
					blink();
				}, 500);
			}
		})();
	</script>
</Layout>

<style>
	main {
		margin: 0;
		padding: 1rem;
		width: 100%;
		max-width: calc(100% - 2rem);
		color: white;
	}

	.timer {
		z-index: 1000;
	}
</style>
